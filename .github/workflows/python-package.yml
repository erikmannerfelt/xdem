# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.os }}, python ${{ matrix.python-version}}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.7", "3.8", "3.9"]


    # Run all shells using bash (including Windows)
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - name: Get current date (for caching)
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Cache conda
      uses: actions/cache@v2
      env:
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}-${{ steps.date.output.date }}-${{
          hashFiles('dev-environment.yml') }}

    # Set up the conda-forge environment with mamba
    - name: Set up Python ${{ matrix.python-version }} and dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        channels: conda-forge
        channel-priority: strict
        environment-file: dev-environment.yml
        activate-environment: xdem-dev
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly

    - name: Install project
      run: |
        pip install --no-dependencies --editable .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # pytest will run asynchronously, so test data need to be downloaded first.
    - name: Download example data
      run: |
        python -c "from xdem.examples import *; download_longyearbyen_examples(overwrite=False)"
    - name: Test with pytest
      run: |
        pytest -rA -n=auto
